# 多阶段构建 Dockerfile
# 第一阶段：构建阶段
FROM node:20-alpine AS builder

# 设置工作目录
WORKDIR /app

# 复制 package.json 和 package-lock.json
COPY package*.json ./

# 安装依赖
RUN npm ci --only=production

# 复制源代码
COPY . .

# 构建应用
RUN npm install
RUN npm run build

# 第二阶段：生产阶段
FROM nginx:alpine

# 复制构建产物到 nginx 目录
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制优化的 nginx 配置
COPY nginx-optimized.conf /etc/nginx/conf.d/default.conf

# 创建非 root 用户
#RUN addgroup -g 1001 -S nodejs
#RUN adduser -S nextjs -u 1001

# 设置权限
#RUN chown -R nextjs:nodejs /usr/share/nginx/html
#RUN chown -R nextjs:nodejs /var/cache/nginx
#RUN chown -R nextjs:nodejs /var/log/nginx
#RUN chown -R nextjs:nodejs /etc/nginx/conf.d

# 切换到非 root 用户
#USER nextjs

# 暴露端口
EXPOSE 80

# 启动 nginx
CMD ["nginx", "-g", "daemon off;"]
